@page "/edit-book"

@page "/edit-book/{id:int}"
@inject IBookService BookService
@inject NavigationManager NavigationManager

@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false)) 
<div class="background-grad p-5 m-5">

@if (Id == null)
{

    <h5>Add New Book</h5>

}
else
{

        <h5>
            Edit book title:<span style="color:#263e82; padding-left:5px; font-style:italic; font-size: 1.5rem"> @book.Name</span>
        </h5>

    }


<EditForm class="row g-3" Model="book" OnSubmit="HandleSubmit" FormName="editBook">


           <div class="col-auto">
             <label>Title</label>
            <InputText @bind-Value = "book.Name">@book.Name</InputText>
           </div>
   
            <div class="col-auto">
                <button type="submit" class ="btn btn-primary">Submit</button>
            </div>

            @if(Id.HasValue)
            {
                 <div class="col-auto">
                <button @onclick="DeleteBook" type="button" class="btn btn-danger">Remove</button>
                </div>
            }
</EditForm>


</div>

@code {
    [Parameter]
    public int? Id { get; set; }
    [SupplyParameterFromForm]
    Book book { get; set; } = new Book { Name = string.Empty };


    protected override async Task OnParametersSetAsync()
    {
        if (Id.HasValue)
        {
            book = await BookService.GetBookById(Id.Value);

        }
    }

    async Task HandleSubmit()
    {

        if (Id == null)
        {
            await BookService.AddBook(book);

            NavigationManager.NavigateTo("/books");

        }
        else
        {
            await BookService.EditBook(Id.Value, book);
            NavigationManager.NavigateTo("/books");

        }

    }

    async Task DeleteBook()
    {
        if (Id.HasValue)
        {
            var success = await BookService.DeleteBook(Id.Value);
            if (success)
            {
                // Navigate to another page after successful deletion
                NavigationManager.NavigateTo("/books");
            }
            else
            {
                // Optionally handle the case where the deletion failed
                Console.WriteLine("Failed to delete the book.");
            }
        }
    }

}
