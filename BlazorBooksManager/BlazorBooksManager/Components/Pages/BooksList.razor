@page "/books"
@inject IBookService BookService
@inject NavigationManager NavigationManager 
@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="background-grad p-5 m-5">
    <div class="alert alert-primary" role="alert">
        <h3 class="text-center">My Books</h3>
    </div>

@if(books == null)
{
    <span>Loading...</span>
}
else if (books.Count == 0)
{
    <span>No books found.</span>
}
else
{
    <div class="border" style="padding: 20px; margin-top: 20px;">
            <ol class="list-group">
                @foreach ( var book in books)
                {
                    <div class="container ">
                        <div class="row " style="border-bottom: #346adc 4px groove;
        ">
                                <div class="col-sm">
                                   <li style="margin:5px; padding: 5px">@book.Name</li>
                                 </div>
                                 <div class="col-sm" style="margin:5px; padding: 5px">
                                   <EditBookButton Id="book.Id" />
                                 </div>
                           </div>
                     </div>

                    

                }
           </ol>
      
    </div>  
}
<button @onclick="CreateBook" class="btn btn-primary" style="margin:5px; padding: 5px">Add Book</button>

</div>




@code {
    List<Book>? books =null; //this is null by default

    protected override async Task OnInitializedAsync()
    {
        books = await BookService.GetAllBooks();
    }

    void CreateBook()
    {
        NavigationManager.NavigateTo("/edit-book");
    }
}
